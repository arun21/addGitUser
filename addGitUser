#!/bin/bash

# setup user that can't login so that they can't make any changes "manually"
adduser $1 -s /sbin/nologin

# apache userdir permissions
chmod 711 /home/$1
cd /home/$1

# make basic directories git and rails_apps ... also a tmp directory that we will delete
mkdir git
mkdir rails_apps
mkdir rails_apps/$1
mkdir tmp

#make the bare first repo
git init --bare ./git/$1

# clone working copy in to tmp
cd tmp
git clone file:///`pwd`/../git/$1
cd $1

# write the post-receive hook
OUTFILE=post-receive
(
cat <<EOFPRCV
#!/bin/bash

GIT_WORK_TREE=/home/$1/rails_apps/$1 git checkout -f
EOFPRCV
) > $OUTFILE
chmod +x $OUTFILE
mkdir public
mkdir public/git

# make the .htaccess with the security and the rewrite rule 
sRealm='git repository'
(
cat <<EOFHTA
AuthType Digest
AuthName "$sRealm"
AuthDigestDomain /git/ 
AuthUserFile /home/$1/rails_apps/$1/passwd_file
Require valid-user
RewriteEngine On
RewriteBase /git
EOFHTA
) > public/git/.htaccess
(
cat <<'EOFHT2'
RewriteRule ^(.*)$ /scripts/git.cgi/$1
EOFHT2
) >> public/git/.htaccess
htdigest -c passwd_file "$sRealm" $1

# make the .htaccess to run our script
mkdir public/scripts
(
cat <<EOFHT2
Options +ExecCgi
EOFHT2
) > public/scripts/.htaccess

# make our script
(
cat <<EOFSH
#!/bin/sh
#first we export the GIT_PROJECT_ROOT
export GIT_PROJECT_ROOT=/home/$1/git/
export GIT_HTTP_EXPORT_ALL=T
EOFSH
) > public/scripts/git.cgi
(
cat <<'EOFSH2'
export REMOTE_USER=$REDIRECT_REMOTE_USER
#and run your git-http-backend
/usr/libexec/git-core/git-http-backend
EOFSH2
) >> public/scripts/git.cgi

# commit everything and check out into the rails_apps work tree
git add .
git commit -am "initial commit"
git push origin master
GIT_WORK_TREE=/home/$1/rails_apps/$1 git checkout -f

# link in to work tree
ln -s /home/$1/rails_apps/$1/public /home/$1/public_html
ln -s /home/$1/rails_apps/$1/post-receive /home/$1/git/$1/hooks/post-receive

# set the rest of teh userdir permissions
chmod 755 /home/$1/public_html
chmod 755 /home/$1/rails_apps/$1/public/scripts/hello.cgi
chmod 755 /home/$1/rails_apps/$1/public/scripts/git.cgi

# try to make the script executable in selinux (this failed)
#chcon -R -h -t httpd_sys_script_exec_t /home/$1/rails_apps/$1/public/scripts/hello.cgi
#chcon -R -h -t httpd_sys_script_exec_t /home/$1/rails_apps/$1/public/scripts/git.cgi

# clean up tmp directory and make user the owner if setuid is being used, otherwise apache
cd ../..
rm -rf tmp
#chown -R $1:$1 *
chown -R apache:apache *
